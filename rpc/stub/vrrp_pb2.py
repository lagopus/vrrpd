# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vrrp.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='vrrp.proto',
  package='rpc',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\nvrrp.proto\x12\x03rpc\"&\n\x05Reply\x12\x1d\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x0f.rpc.ResultCode\"&\n\x08VifEntry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x61\x64\x64r\x18\x02 \x01(\t\"4\n\x07VifInfo\x12\t\n\x01n\x18\x01 \x01(\x04\x12\x1e\n\x07\x65ntries\x18\x02 \x03(\x0b\x32\r.rpc.VifEntry*&\n\nResultCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0b\n\x07\x46\x41ILURE\x10\x01\x32\x82\x01\n\x04Vrrp\x12*\n\nGetVifInfo\x12\x0c.rpc.VifInfo\x1a\x0c.rpc.VifInfo\"\x00\x12&\n\x08ToMaster\x12\x0c.rpc.VifInfo\x1a\n.rpc.Reply\"\x00\x12&\n\x08ToBackup\x12\x0c.rpc.VifInfo\x1a\n.rpc.Reply\"\x00\x62\x06proto3')
)

_RESULTCODE = _descriptor.EnumDescriptor(
  name='ResultCode',
  full_name='rpc.ResultCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILURE', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=153,
  serialized_end=191,
)
_sym_db.RegisterEnumDescriptor(_RESULTCODE)

ResultCode = enum_type_wrapper.EnumTypeWrapper(_RESULTCODE)
SUCCESS = 0
FAILURE = 1



_REPLY = _descriptor.Descriptor(
  name='Reply',
  full_name='rpc.Reply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='rpc.Reply.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=57,
)


_VIFENTRY = _descriptor.Descriptor(
  name='VifEntry',
  full_name='rpc.VifEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rpc.VifEntry.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='addr', full_name='rpc.VifEntry.addr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=97,
)


_VIFINFO = _descriptor.Descriptor(
  name='VifInfo',
  full_name='rpc.VifInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='n', full_name='rpc.VifInfo.n', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='entries', full_name='rpc.VifInfo.entries', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=151,
)

_REPLY.fields_by_name['code'].enum_type = _RESULTCODE
_VIFINFO.fields_by_name['entries'].message_type = _VIFENTRY
DESCRIPTOR.message_types_by_name['Reply'] = _REPLY
DESCRIPTOR.message_types_by_name['VifEntry'] = _VIFENTRY
DESCRIPTOR.message_types_by_name['VifInfo'] = _VIFINFO
DESCRIPTOR.enum_types_by_name['ResultCode'] = _RESULTCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Reply = _reflection.GeneratedProtocolMessageType('Reply', (_message.Message,), dict(
  DESCRIPTOR = _REPLY,
  __module__ = 'vrrp_pb2'
  # @@protoc_insertion_point(class_scope:rpc.Reply)
  ))
_sym_db.RegisterMessage(Reply)

VifEntry = _reflection.GeneratedProtocolMessageType('VifEntry', (_message.Message,), dict(
  DESCRIPTOR = _VIFENTRY,
  __module__ = 'vrrp_pb2'
  # @@protoc_insertion_point(class_scope:rpc.VifEntry)
  ))
_sym_db.RegisterMessage(VifEntry)

VifInfo = _reflection.GeneratedProtocolMessageType('VifInfo', (_message.Message,), dict(
  DESCRIPTOR = _VIFINFO,
  __module__ = 'vrrp_pb2'
  # @@protoc_insertion_point(class_scope:rpc.VifInfo)
  ))
_sym_db.RegisterMessage(VifInfo)



_VRRP = _descriptor.ServiceDescriptor(
  name='Vrrp',
  full_name='rpc.Vrrp',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=194,
  serialized_end=324,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetVifInfo',
    full_name='rpc.Vrrp.GetVifInfo',
    index=0,
    containing_service=None,
    input_type=_VIFINFO,
    output_type=_VIFINFO,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ToMaster',
    full_name='rpc.Vrrp.ToMaster',
    index=1,
    containing_service=None,
    input_type=_VIFINFO,
    output_type=_REPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ToBackup',
    full_name='rpc.Vrrp.ToBackup',
    index=2,
    containing_service=None,
    input_type=_VIFINFO,
    output_type=_REPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_VRRP)

DESCRIPTOR.services_by_name['Vrrp'] = _VRRP

# @@protoc_insertion_point(module_scope)
