# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import vrrp_pb2 as vrrp__pb2


class VrrpStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVifInfo = channel.unary_unary(
        '/rpc.Vrrp/GetVifInfo',
        request_serializer=vrrp__pb2.VifInfo.SerializeToString,
        response_deserializer=vrrp__pb2.VifInfo.FromString,
        )
    self.ToMaster = channel.unary_unary(
        '/rpc.Vrrp/ToMaster',
        request_serializer=vrrp__pb2.VifInfo.SerializeToString,
        response_deserializer=vrrp__pb2.Reply.FromString,
        )
    self.ToBackup = channel.unary_unary(
        '/rpc.Vrrp/ToBackup',
        request_serializer=vrrp__pb2.VifInfo.SerializeToString,
        response_deserializer=vrrp__pb2.Reply.FromString,
        )


class VrrpServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetVifInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ToMaster(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ToBackup(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VrrpServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVifInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetVifInfo,
          request_deserializer=vrrp__pb2.VifInfo.FromString,
          response_serializer=vrrp__pb2.VifInfo.SerializeToString,
      ),
      'ToMaster': grpc.unary_unary_rpc_method_handler(
          servicer.ToMaster,
          request_deserializer=vrrp__pb2.VifInfo.FromString,
          response_serializer=vrrp__pb2.Reply.SerializeToString,
      ),
      'ToBackup': grpc.unary_unary_rpc_method_handler(
          servicer.ToBackup,
          request_deserializer=vrrp__pb2.VifInfo.FromString,
          response_serializer=vrrp__pb2.Reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rpc.Vrrp', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
